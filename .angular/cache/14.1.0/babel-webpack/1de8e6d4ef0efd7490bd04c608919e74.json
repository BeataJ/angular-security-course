{"ast":null,"code":"import _inherits from \"/Users/beata/Documents/projects/angular-university/angular-security/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/beata/Documents/projects/angular-university/angular-security/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/beata/Documents/projects/angular-university/angular-security/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/beata/Documents/projects/angular-university/angular-security/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate));\n  };\n}\n\nvar TakeWhileOperator = /*#__PURE__*/function () {\n  function TakeWhileOperator(predicate) {\n    _classCallCheck(this, TakeWhileOperator);\n\n    this.predicate = predicate;\n  }\n\n  _createClass(TakeWhileOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    }\n  }]);\n\n  return TakeWhileOperator;\n}();\n\nvar TakeWhileSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(TakeWhileSubscriber, _Subscriber);\n\n  var _super = _createSuper(TakeWhileSubscriber);\n\n  function TakeWhileSubscriber(destination, predicate) {\n    var _this;\n\n    _classCallCheck(this, TakeWhileSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(TakeWhileSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n      var result;\n\n      try {\n        result = this.predicate(value, this.index++);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n\n      this.nextOrComplete(value, result);\n    }\n  }, {\n    key: \"nextOrComplete\",\n    value: function nextOrComplete(value, predicateResult) {\n      var destination = this.destination;\n\n      if (Boolean(predicateResult)) {\n        destination.next(value);\n      } else {\n        destination.complete();\n      }\n    }\n  }]);\n\n  return TakeWhileSubscriber;\n}(Subscriber); //# sourceMappingURL=takeWhile.js.map","map":null,"metadata":{},"sourceType":"module"}